---
import type { WebmentionsChildren } from "@/types";

import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

interface Props {
	mentions: WebmentionsChildren[];
}

const { mentions } = Astro.props;

const validComments = ["mention-of", "in-reply-to"];

const comments = mentions.filter(
	(mention) => validComments.includes(mention["wm-property"]) && mention.content?.text
);

/**
 ! show a link to the mention 

 */
---

{
	!!comments.length && (
		<div>
			<p class="">
				<strong>{comments.length}</strong> Mention{comments.length > 1 ? "s" : ""}
			</p>
			<ul class="" role="list">
				{comments.map((mention) => (
					<li class="">
						{mention.author?.photo && mention.author.photo !== "" ? (
							mention.author.url && mention.author.url !== "" ? (
								<a
									class=""
									href={mention.author.url}
									rel="noopener noreferrer"
									target="_blank"
									title={mention.author.name}
								>
									<Image
										alt={mention.author?.name}
										class=""
										height={48}
										src={mention.author?.photo}
										width={48}
									/>
								</a>
							) : (
								<Image
									alt={mention.author?.name}
									class=""
									height={48}
									src={mention.author?.photo}
									width={48}
								/>
							)
						) : null}
						<div class="">
							<div class="">
								<p class="">{mention.author?.name}</p>
								<a
									aria-labelledby="cmt-source"
									class=""
									href={mention.url}
									rel="noopener noreferrer"
									target="_blank"
								>
									<span class="visually-hidden" id="cmt-source">
										Vist the source of this webmention
									</span>
									<Icon aria-hidden="true" class="" focusable="false" name="mdi:open-in-new" />
								</a>
							</div>
							<p class="">{mention.content?.text}</p>
						</div>
					</li>
				))}
			</ul>
		</div>
	)
}
